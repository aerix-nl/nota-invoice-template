'use strict';
var base, dependencies, libs, onDependenciesLoaded, requireError, root, withNota, withoutNota;

(base = Function.prototype).bind || (base.bind = function(_this) {
  return (function(_this) {
    return function() {
      return _this.apply(_this, arguments);
    };
  })(this);
});

root = './../../';

libs = 'bower_components/';

requirejs.config({
  enfordeDefine: true,
  paths: {
    'jquery': root + libs + 'jquery/dist/jquery',
    'underscore': root + libs + 'underscore/underscore',
    'underscore.string': root + libs + 'underscore.string/lib/underscore.string',
    'handlebars': root + libs + 'handlebars/handlebars.amd',
    'material-design-lite': root + libs + 'material-design-lite/material.min',
    'moment': root + libs + 'momentjs/moment',
    'moment_nl': root + libs + 'momentjs/locale/nl',
    'i18next': root + libs + 'i18next/i18next.amd.withJQuery',
    'bluebird': root + libs + 'bluebird/js/browser/bluebird',
    'tv4': root + libs + 'tv4/tv4',
    'requirejs': root + libs + 'requirejs/require',
    'text': root + libs + 'requirejs-text/text',
    'json': root + libs + 'requirejs-plugins/src/json',
    'template-controller': './template-controller',
    'template-model': './template-model',
    'schema': root + 'json/schema.json',
    'translation_nl': root + 'json/locales/nl.json',
    'translation_en': root + 'json/locales/en.json',
    'preview-data': root + 'json/preview.json',
    'nota': '/nota/lib/client'
  }
});

dependencies = ['template-controller'];

onDependenciesLoaded = function(TemplateController) {
  var templateController;
  templateController = new TemplateController(typeof Nota !== "undefined" && Nota !== null ? Nota : void 0);
  window.template = templateController;
  return templateController;
};

requireError = function(error) {
  var breakLine, errorList, errorText, li, type;
  if (!(document.getElementById('module-require-error').style.display === 'block')) {
    document.getElementById('module-require-error').style.display = 'block';
  }
  if (window.errorListItem == null) {
    window.errorListItem = document.querySelectorAll("div.error-container ul li.error")[0];
    document.querySelectorAll("div.error-container ul")[0].innerHTML = "";
  }
  errorList = document.querySelectorAll("div.error-container ul")[0];
  li = errorListItem.cloneNode();
  type = document.createElement('strong');
  type.innerHTML = "Module require error (" + error.requireType + ")";
  breakLine = document.createElement('br');
  errorText = document.createTextNode(error.message);
  li.appendChild(type);
  li.appendChild(breakLine);
  li.appendChild(errorText);
  return errorList.appendChild(li);
};

withNota = function(Nota) {
  return require(dependencies, onDependenciesLoaded, requireError);
};

withoutNota = function(error) {
  var notaRequiredError;
  if (window._phantom) {
    dependencies = ['handlebars', "text!" + root + "templates/nota-required.hbs"];
    notaRequiredError = function(Handlebars, template) {
      template = Handlebars.compile(template);
      window.document.body.innerHTML = template(error);
      throw error;
    };
    return require(dependencies, notaRequiredError, requireError);
  }
  requirejs.undef('nota');
  return require(dependencies, onDependenciesLoaded, requireError);
};

require(['nota'], withNota, withoutNota);

//# sourceMappingURL=data:application/json;base64,
